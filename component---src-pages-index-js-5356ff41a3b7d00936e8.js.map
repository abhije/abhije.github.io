{"version":3,"file":"component---src-pages-index-js-5356ff41a3b7d00936e8.js","mappings":"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","sources":["webpack://surya/./node_modules/camelcase/index.js","webpack://surya/../src/image-utils.ts","webpack://surya/../src/components/hooks.ts","webpack://surya/../src/components/picture.tsx","webpack://surya/../src/components/layout-wrapper.tsx","webpack://surya/../src/components/placeholder.tsx","webpack://surya/../src/components/main-image.tsx","webpack://surya/../src/components/gatsby-image.browser.tsx","webpack://surya/../src/components/gatsby-image.server.tsx","webpack://surya/../src/components/static-image.server.tsx","webpack://surya/../src/components/static-image.tsx","webpack://surya/./src/templates/home/banner.js","webpack://surya/./src/templates/home/brands.js","webpack://surya/./src/templates/home/cta_products.js","webpack://surya/./src/templates/home/motto_vm.js","webpack://surya/./src/templates/home/cta_quality.js","webpack://surya/./src/pages/index.js","webpack://surya/./src/templates/header.js","webpack://surya/./src/templates/footer.js","webpack://surya/./src/templates/layout.js","webpack://surya/./src/svg/bulb.svg","webpack://surya/./src/svg/caret.svg","webpack://surya/./src/svg/fb.svg","webpack://surya/./src/svg/heart.svg","webpack://surya/./src/svg/horn.svg","webpack://surya/./src/svg/ln.svg","webpack://surya/./src/svg/logo.svg","webpack://surya/./src/svg/rocket.svg","webpack://surya/./src/svg/tw.svg"],"sourcesContent":["'use strict';\n\nvar preserveCamelCase = function preserveCamelCase(string) {\n  var isLastCharLower = false;\n  var isLastCharUpper = false;\n  var isLastLastCharUpper = false;\n\n  for (var i = 0; i < string.length; i++) {\n    var character = string[i];\n\n    if (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n      string = string.slice(0, i) + '-' + string.slice(i);\n      isLastCharLower = false;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = true;\n      i++;\n    } else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n      string = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = false;\n      isLastCharLower = true;\n    } else {\n      isLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n    }\n  }\n\n  return string;\n};\n\nvar camelCase = function camelCase(input, options) {\n  if (!(typeof input === 'string' || Array.isArray(input))) {\n    throw new TypeError('Expected the input to be `string | string[]`');\n  }\n\n  options = Object.assign({\n    pascalCase: false\n  }, options);\n\n  var postProcess = function postProcess(x) {\n    return options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n  };\n\n  if (Array.isArray(input)) {\n    input = input.map(function (x) {\n      return x.trim();\n    }).filter(function (x) {\n      return x.length;\n    }).join('-');\n  } else {\n    input = input.trim();\n  }\n\n  if (input.length === 0) {\n    return '';\n  }\n\n  if (input.length === 1) {\n    return options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n  }\n\n  var hasUpperCase = input !== input.toLowerCase();\n\n  if (hasUpperCase) {\n    input = preserveCamelCase(input);\n  }\n\n  input = input.replace(/^[_.\\- ]+/, '').toLowerCase().replace(/[_.\\- ]+(\\w|$)/g, function (_, p1) {\n    return p1.toUpperCase();\n  }).replace(/\\d+(\\w|$)/g, function (m) {\n    return m.toUpperCase();\n  });\n  return postProcess(input);\n};\n\nmodule.exports = camelCase; // TODO: Remove this for the next major release\n\nmodule.exports.default = camelCase;","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { Fragment, FunctionComponent } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<ILayoutWrapperProps> =\n  function LayoutWrapper({ children, ...props }) {\n    return (\n      <Fragment>\n        <Sizer {...props} />\n        {children}\n\n        {SERVER ? <NativeScriptLoading /> : null}\n      </Fragment>\n    )\n  }\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import * as React from 'react'\nimport { Link } from 'gatsby'\nimport { StaticImage } from 'gatsby-plugin-image'\nimport ChevronSvg from 'src/svg/caret.svg'\n\n//------------------------------------------------------------------------------\n//-- HOME BANNER TEMPLATE --\n//------------------------------------------------------------------------------\n\nexport default function HomeBanner({ data }) {\n  return (\n    <section className=\"c-home-section c-home-section--banner\">\n        <div className=\"c-page__inner-m c-home-section__wrap\">\n          <article>\n            <h2>{data.title}</h2>\n            <p>{data.intro}</p>\n            <Link to={data.cta.url} className='o-btn'>\n              {data.cta.title}\n              <ChevronSvg/>\n            </Link>\n          </article>\n          <StaticImage src=\"../../images/factory.png\" alt='Factory'\n            placeholder='tracedSVG' layout='fullWidth'/>\n        </div>\n      </section>\n  )\n}\n","import * as React from 'react'\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\n\n//------------------------------------------------------------------------------\n//-- HOME BRANDS TEMPLATE --\n//------------------------------------------------------------------------------\n\nexport default function HomeBrands({ data, imageSharps }) {\n  return (\n    <section className=\"c-home-section c-home-section--brand\">\n      <div className=\"c-page__inner-m c-home-section__wrap\">\n        <h5 className=\"c-page__title\">{data.title}</h5>\n        <ul className=\"c-home-section__brand-list\">\n          {data.items.map(function(item, index) {\n            let image = undefined\n            imageSharps.map(function(img, x) {\n              if(img.base === item.image) {\n                image = getImage(img)\n              }\n              return null;\n            })\n\n            if (image !== undefined) {\n              return (\n                <li key={'item' + index}>\n                  <GatsbyImage image={image} alt={item.name} width=\"149\" height=\"96\" />\n                </li>\n              )\n            }\n\n            return;\n          })}\n        </ul>\n      </div>\n    </section>\n  )\n}\n","import * as React from 'react'\nimport { Link } from 'gatsby'\nimport { StaticImage } from 'gatsby-plugin-image'\n\n//------------------------------------------------------------------------------\n//-- HOME BRANDS TEMPLATE --\n//------------------------------------------------------------------------------\n\nexport default function HomeCtaProducts() {\n  return (\n    <section className=\"c-home-section c-home-section--product-cta\">\n      <div className=\"c-page__inner-s c-home-section__wrap\">\n        <article>\n          <StaticImage src='../../images/boxes.png' alt='Product boxes'\n            layout='constrained' placeholder='blurred'/>\n          <h4 className=\"c-page__title\">Millions of units produced every week, flawlessly.</h4>\n          <Link to='/products' className='o-btn o-btn--white'>Products &amp; Services</Link>\n        </article>\n      </div>\n    </section>\n  )\n}\n","import * as React from 'react'\nimport HornSvg from 'src/svg/horn.svg'\nimport BulbSvg from 'src/svg/bulb.svg'\nimport RocketSvg from 'src/svg/rocket.svg'\n\n//------------------------------------------------------------------------------\n//-- HOME BRANDS TEMPLATE --\n//------------------------------------------------------------------------------\n\nexport default function HomeMottoVisionMission({ data }) {\n  const icons = {\n    horn: <HornSvg/>,\n    bulb: <BulbSvg/>,\n    rocket: <RocketSvg/>\n  }\n\n  return (\n    <section className=\"c-home-section c-home-section--mvm\">\n    <div className=\"c-home-section__wrap\">\n      <h5 className='c-page__title'>{data.title}</h5>\n      <div className=\"c-home-section__boxes\">\n        {data.boxes.map((box, index) => (\n          <div key={'box-' + index} className=\"c-home-section__box\">\n              <article>\n                {icons[box.icon]}\n                <h4 className=\"c-page__title\">{box.title}</h4>\n                <p>{box.content}</p>\n              </article>\n          </div>\n        ))}\n      </div>\n    </div>\n  </section>\n  )\n}\n","import { Link } from 'gatsby'\nimport { StaticImage } from 'gatsby-plugin-image'\nimport * as React from 'react'\n\n//------------------------------------------------------------------------------\n//-- HOME BRANDS TEMPLATE --\n//------------------------------------------------------------------------------\n\nexport default function HomeCtaQuality({ data }) {\n  return (\n    <section className=\"c-home-section c-home-section--quality-cta\">\n      <article>\n        <h4 className=\"c-page__title\">{data.title}</h4>\n        <Link to={data.cta.url} className=\"o-btn o-btn--alt\">{data.cta.title}</Link>\n      </article>\n    <div className=\"c-page__inner-s c-home-section__wrap\">\n      <div className=\"c-home-section__qlty\">\n        <div className=\"c-home-section__qlty-item c-home-section__qlty-item--post\">\n          <article>\n            <h4 className=\"c-page__title\">{data.title}</h4>\n            <Link to={data.cta.url} className=\"o-btn o-btn--alt\">{data.cta.title}</Link>\n          </article>\n        </div>\n        <div className=\"c-home-section__qlty-item c-home-section__qlty-item--img\">\n          <StaticImage src='../../images/factory_man.jpg' alt='Factory Man'\n            layout='fullWidth' placeholder='blurred'/>\n        </div>\n      </div>\n    </div>\n  </section>\n  )\n}\n","import * as React from \"react\";\nimport Layout from \"templates/layout\";\nimport HomeBanner from \"templates/home/banner\";\nimport HomeBrands from \"templates/home/brands\";\nimport HomeCtaProducts from \"templates/home/cta_products\";\nimport HomeMottoVisionMission from \"templates/home/motto_vm\";\nimport { graphql } from \"gatsby\";\nimport HomeCtaQuality from \"templates/home/cta_quality\";\nimport HomePage from 'src/content/pages/home.yml'\n\n//------------------------------------------------------------------------------\n//-- INDEX PAGE --\n//------------------------------------------------------------------------------\n\nexport default function IndexPage({ data }) {\n  const image_sharps = data.allFile.nodes;\n\n  return (\n    <Layout>\n      <HomeBanner data={HomePage.banner} />\n      <HomeBrands data={HomePage.brands} imageSharps={image_sharps} />\n      <HomeCtaProducts data={HomePage.products_cta} />\n      <HomeMottoVisionMission data={HomePage.motto_vision_mission} />\n      <HomeCtaQuality data={HomePage.quality_cta} />\n    </Layout>\n  );\n}\n\n//------------------------------------------------------------------------------\n//-- PAGE HEAD CONTENT --\n//------------------------------------------------------------------------------\n\nexport const Head = () => <title>Home page</title>;\n\n//------------------------------------------------------------------------------\n//-- QUERY --\n//------------------------------------------------------------------------------\n\nexport const query = graphql`\n  query MyHomeQuery {\n    allFile(filter: { sourceInstanceName: { eq: \"images\" } }) {\n      nodes {\n        childImageSharp {\n          gatsbyImageData\n        }\n        base\n      }\n    }\n  }\n`;\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport SiteLogo from \"src/svg/logo.svg\";\nimport FbSvg from \"src/svg/fb.svg\";\nimport TwSvg from \"src/svg/tw.svg\";\nimport LnSvg from \"src/svg/ln.svg\";\n\n//------------------------------------------------------------------------------\n//-- HEADER TEMPLATE --\n//------------------------------------------------------------------------------\n\nexport default function Header({ data }) {\n  const icons = {\n    fb: <FbSvg />,\n    tw: <TwSvg />,\n    ln: <LnSvg />,\n  };\n\n  return (\n    <header className=\"c-site-header\">\n      <h1 className=\"c-site-header__logo\">\n        <Link to=\"/\">\n          <SiteLogo />\n        </Link>\n      </h1>\n      <nav className=\"c-site-header__hamburger c-site-header__menus\">\n        <input className=\"c-hamburger__input\" type=\"checkbox\" />\n        <div className=\"c-hamburger__lines\">\n          <span className=\"c-hamburger__line c-hamburger__line--1\"></span>\n          <span className=\"c-hamburger__line c-hamburger__line--2\"></span>\n          <span className=\"c-hamburger__line c-hamburger__line--3\"></span>\n        </div>\n        <div className=\"c-hamburger__menus c-site-header__menus-wrap\">\n          <ul className=\"c-site-header__menu c-site-header__menu--social\">\n            {data.site_social_menu.map((item, index) => (\n              <li key={index}>\n                <a href={item.url} target=\"_blank\" rel=\"noreferrer\">\n                  {icons[item.icon]}\n                </a>\n              </li>\n            ))}\n          </ul>\n          <ul className=\"c-site-header__menu c-site-header__menu--secondary\">\n            {data.site_secondary_menu.map((item, index) => (\n              <li key={index}>\n                <Link activeClassName=\"active\" to={item.url}>\n                  {item.title}\n                </Link>\n              </li>\n            ))}\n          </ul>\n          <ul className=\"c-site-header__menu c-site-header__menu--primary\">\n            {data.site_primary_menu.map((item, index) => (\n              <li key={index}>\n                <Link activeClassName=\"active\" to={item.url}>\n                  {item.title}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"c-hamburger__overlay\"></div>\n      </nav>\n    </header>\n  );\n}\n","import * as React from 'react'\nimport { Link } from 'gatsby'\nimport HeartSvg from 'src/svg/heart.svg'\n\nexport default function Footer({ data }) {\n  return (\n    <footer className=\"c-site-footeer\">\n      <div className=\"c-site-footer__wrap\">\n        <div className=\"c-page__inner-m c-site-footer__get-started\">\n          <article>\n            <h6>{data.site_get_started.subtitle}</h6>\n            <h4 className=\"c-page__title\">{data.site_get_started.title}</h4>\n            <Link to={data.site_get_started.cta.url} className=\"o-btn\">\n              {data.site_get_started.cta.title}\n            </Link>\n          </article>\n        </div>\n        <div className=\"c-page__inner-m c-site-footer__wrap\">\n          <ul className=\"c-site-footer__menu\">\n            {data.site_footer_menu.map((item, index) => (\n              <li key={index}>\n                <Link to={item.url} activeClassName=\"active\">{item.title}</Link>\n                {item.submenu != null &&\n                  (\n                    <ul>{ item.submenu.map((subItem, subIndex) => (\n                        <li><Link to='ghghjhj' activeClassName=\"active\">{subItem.title}</Link></li>\n                      ))}</ul>\n                  )\n                }\n              </li>\n            ))}\n          </ul>\n          <p className=\"c-site-footer__copyrt\">\n            &copy; 2022. Surya Packages. All rights reserved.&nbsp;&nbsp;\n            <span><HeartSvg/>&nbsp;Made in India</span>\n            <span class=\"c-site-footer__bb\">\n              Crafted by&nbsp;\n              <a href=\"http://bornbasic.com\" target=\"_blank\">BornBasic</a>\n            </span>\n          </p>\n        </div>\n      </div>\n    </footer>\n  )\n}\n","import * as React from \"react\";\nimport Header from \"templates/header\";\nimport Footer from \"templates/footer\";\nimport siteData from \"src/content/site.yml\";\nimport \"src/scss/style.scss\";\n\n//------------------------------------------------------------------------------\n//-- LAYOUT TEMPLATE --\n//------------------------------------------------------------------------------\n\nexport default function Layout({ children }) {\n  return (\n    <main className=\"o-container\">\n      <Header data={siteData} />\n      <div className=\"c-page\">{children}</div>\n      <Footer data={siteData} />\n    </main>\n  );\n}\n","var React = require('react');\n\nfunction Bulb (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"g\",{\"fill\":\"#ffa767\"},[React.createElement(\"path\",{\"d\":\"m40.0288 63.966h9.1726c.9039 0 1.4843-.5502 1.4927-1.3337.0083-.7835-.5737-1.3336-1.4677-1.3636-.1934 0-.3885 0-.5837 0h-11.9261c-.2502 0-.5003.0133-.7505-.01-.7438-.0751-1.2692-.6169-1.2742-1.297-.005-.6802.5187-1.232 1.2575-1.3104.2221-.015.4447-.0183.6671-.01 3.5574 0 7.1147-.0133 10.6737.0117.5703 0 .7705-.1334.7521-.7318-.03-1.1086-.0884-2.2372.0734-3.3258.5154-3.4776 2.465-6.0815 5.2885-8.0437 4.0576-2.8207 7.0529-6.4716 8.9291-11.0443 5.5937-13.6367-2.9202-29.52225-17.3847-32.41129-6.363-1.27698-12.3035-.2056-17.8216 3.21412-.5754.35009-1.1357.61015-1.7745.18338-.4636-.31674-.6004-.77352-.5287-1.31199.0717-.53846.4587-.79519.8639-1.05192 3.4039-2.1672 7.108-3.57254 11.1173-3.96597 9.9448-.975238 18.1785 2.40059 24.3259 10.27747 9.2577 11.8613 6.6176 29.0721-5.637 37.8243-.7005.5001-1.4193.9752-2.0297 1.5887-1.8162 1.8238-3.002 3.911-2.8152 6.5916.0276.3329.0276.6674 0 1.0003-.08.8718.0901 1.4586.9807 2.0004 1.7661 1.0586 2.1914 3.4425 1.094 5.2163-.2818.4551-.3335.7419-.0283 1.2286 1.2475 1.9905.5787 4.4228-1.501 5.5614-.1721.0733-.3177.1973-.4175.3555-.0998.1581-.1491.3429-.1412.5297-.2402 4.4144-3.569 7.5935-8.0052 7.5969-2.2182 0-4.4529.2117-6.6577-.1284-3.7325-.5751-6.4092-3.5909-6.601-7.3768-.025-.5001-.1818-.7652-.6304-1.0152-2.0497-1.1386-2.6684-3.6043-1.3993-5.5897.2752-.4318.2302-.6835-.0216-1.0836-1.5427-2.4623-.1051-5.5747 2.7718-6.0498.984-.1667 1.7294.2667 1.8629 1.0752.1267.7685-.392 1.3337-1.3926 1.5137-.8022.1467-1.2825.6885-1.2492 1.4104.0351.7502.6004 1.2736 1.4593 1.2836 1.556.0184 3.1121 0 4.6697.0084zm.0216 7.9619c-2.4432 0-4.8865.0267-7.3281-.0166-.6671-.01-.7955.215-.7221.8118.3085 2.509 2.5016 4.5295 5.045 4.5695 1.9701.03 3.9409.03 5.9121 0 2.5517-.0417 4.7265-2.0422 5.05-4.5645.0751-.5835-.03-.8335-.7121-.8168-2.4183.0433-4.8332.0166-7.2481.0166zm.0401-5.3346c-3.0264 0-6.0545 0-9.0843 0-1.059 0-1.6677.4751-1.6894 1.3053-.0267.8652.602 1.3987 1.6827 1.3987h18.0018c1.0857 0 1.7161-.5268 1.6911-1.3887-.025-.8335-.6287-1.312-1.6828-1.3136-2.9752-.0045-5.9494-.005-8.9225-.0017z\",\"key\":0}),React.createElement(\"path\",{\"d\":\"m13.3163 27.272c.1068-6.9817 2.078-12.6314 6.0673-17.55927.1218-.1517.2418-.30508.3769-.44511.5687-.58681 1.2909-.65182 1.8546-.16671.537.45511.617 1.16699.1668 1.79379-.3203.4518-.6922.8669-1.0241 1.312-8.0652 10.8176-5.7354 26.0313 5.2285 33.8682 2.3832 1.7038 4.3578 3.6843 5.4168 6.465.2409.6213.4028 1.2704.482 1.9321.0901.7668-.3085 1.3553-1.0006 1.5004-.1692.0451-.346.0539-.5189.0259-.1728-.0279-.3378-.0921-.4841-.1883s-.2706-.2222-.3647-.3697c-.0942-.1476-.1561-.3134-.1817-.4865-.5537-2.8474-2.2481-4.8529-4.5496-6.5016-7.4599-5.358-11.1723-12.7031-11.4692-21.1802z\",\"key\":1}),React.createElement(\"path\",{\"d\":\"m31.9918 23.9579c.5288-.0243 1.0568.0631 1.5494.2567.5754.2484.8922.1334 1.2858-.3718.6104-.7955 1.3962-1.4396 2.2962-1.8822.9-.4425 1.89-.6716 2.893-.6693 1.003.0022 1.992.2357 2.89.6823s1.6808 1.0943 2.2876 1.8926c.3652.4684.6354.5651 1.2158.3751 3.2888-1.0753 6.7327 1.302 6.9012 4.7178.045.9019-.432 1.5437-1.1991 1.6121-.7672.0683-1.3342-.4902-1.4126-1.4071-.0951-1.1319-.6555-1.9471-1.6845-2.3772s-2.0013-.2-2.8585.5351c-.974.8336-1.8662.5835-2.3349-.6034-.7071-1.7938-2.088-2.8024-3.8358-2.8007-1.7478.0016-3.0903 1.0002-3.8142 2.8257-.4552 1.1436-1.3625 1.407-2.2848.6134-.8856-.7601-1.8529-1.0169-2.9269-.5584-1.074.4584-1.586 1.317-1.6677 2.4789-.0551.7985-.6505 1.3337-1.3509 1.2987-.7405-.0317-1.2592-.6419-1.2575-1.4804.0033-2.7507 2.4749-5.1396 5.3084-5.1379z\",\"key\":2}),React.createElement(\"path\",{\"d\":\"m40.0288 51.903c-.3102-1.9788.3185-3.7475 1.0923-5.5363 1.8629-4.2977 3.6207-8.6405 5.4219-12.9632.0898-.233.1917-.4611.3052-.6835.3719-.6768 1.0324-.9185 1.6828-.6301.1559.0607.2978.1526.4171.2699s.2135.2577.2768.4125c.0634.1549.0945.321.0916.4882-.0029.1673-.0398.3322-.1084.4848-.7255 1.8337-1.4876 3.6425-2.2448 5.458-1.3075 3.1224-2.5984 6.2448-3.9326 9.3573-.279.6327-.4151 1.3191-.3986 2.0104.0367 1.2754.0217 2.554 0 3.8343-.0116.9186-.5437 1.5137-1.3092 1.5137s-1.2891-.5985-1.3141-1.5137c-.0101-.4168 0-.8335 0-1.2486s.02-.8369.02-1.2537z\",\"key\":3}),React.createElement(\"path\",{\"d\":\"m32.0819 31.9665c.6755.06 1.0257.5268 1.2625 1.1836 1.1991 3.3342 2.4216 6.6683 3.634 9.9925.5004 1.3786 1.0124 2.754 1.501 4.1376.3219.9119.0184 1.6354-.7621 1.8988-.7205.2434-1.3709-.1367-1.6995-1.0402-1.7289-4.7345-3.4522-9.4707-5.17-14.2085-.3803-1.0536.1884-1.9805 1.2341-1.9638z\",\"key\":4}),React.createElement(\"path\",{\"d\":\"m4.72738 23.9562c1.02901 0 2.05635-.015 3.08368 0 .90226.0183 1.50098.5868 1.47597 1.352-.02669.7352-.60707 1.2603-1.47597 1.267-2.11249.0155-4.22498.0155-6.33747 0-.900587 0-1.5009792-.5852-1.47262735-1.352.02501635-.7402.59705635-1.252 1.47262735-1.2653 1.08571-.015 2.16975-.0017 3.25379-.0017z\",\"key\":5}),React.createElement(\"path\",{\"d\":\"m75.3735 26.5835c-1.0557 0-2.1114.0117-3.1687 0-.9089-.015-1.501-.5668-1.4893-1.3336.015-.7419.587-1.2754 1.4559-1.282 2.1125-.0167 4.225-.0167 6.3375 0 .9106 0 1.501.5668 1.491 1.3336-.01.7669-.6088 1.2737-1.541 1.287-1.029.005-2.0581-.005-3.0854-.005z\",\"key\":6}),React.createElement(\"path\",{\"d\":\"m77.665 12.1517c-.0228.2526-.1192.4929-.2772.6914-.1579.1985-.3706.3464-.6117.4255-2.0563.7568-4.111 1.522-6.1707 2.2505-.7672.2701-1.481-.0766-1.7145-.7401-.2601-.7369.0517-1.4054.8756-1.7155 2.0013-.7485 4.0026-1.4836 6.0206-2.1888 1.0107-.3568 1.9046.2417 1.8779 1.277z\",\"key\":7}),React.createElement(\"path\",{\"d\":\"m3.69504 39.7784c-.73548-.0117-1.16743-.3768-1.31753-1.0002-.16677-.6852.14843-1.222.79052-1.4737 1.23914-.4885 2.50163-.9186 3.75078-1.3754.83388-.305 1.65608-.6401 2.50164-.9135.77215-.2501 1.47925.0917 1.70615.7618.2418.7152-.0467 1.3837-.8189 1.6754-2.04968.7752-4.11269 1.5137-6.1707 2.2589-.14455.0378-.29269.0602-.44196.0667z\",\"key\":8}),React.createElement(\"path\",{\"d\":\"m77.66 38.318c.035.987-.7722 1.6971-1.6277 1.4121-2.1831-.7286-4.3362-1.5287-6.4909-2.3506-.6671-.2567-.909-1.0503-.6354-1.6904.2735-.6402.9639-.9219 1.7611-.6435 1.6227.5685 3.2354 1.1669 4.8515 1.7521.4436.1667.8873.3201 1.3242.5001.2135.0838.4014.2222.5448.4012.1433.179.2373.3924.2724.619z\",\"key\":9}),React.createElement(\"path\",{\"d\":\"m11.1849 14.2872c.0135.2101-.0261.4203-.1151.6111-.0891.1909-.2247.3562-.3945.4809-.1697.1247-.3681.2047-.5769.2327-.20884.0279-.42132.0029-.61791-.0727-2.12472-.7269-4.23277-1.5004-6.32914-2.3106-.6671-.2567-.96229-.8335-.74382-1.5604.20514-.6902.86057-1.1069 1.57437-.8635 2.16808.7451 4.33616 1.5453 6.4876 2.3539.4769.18.7071.6051.7154 1.1286z\",\"key\":10})]));\n}\n\nBulb.defaultProps = {\"fill\":\"none\",\"height\":\"80\",\"viewBox\":\"0 0 80 80\",\"width\":\"80\"};\n\nmodule.exports = Bulb;\n\nBulb.default = Bulb;\n","var React = require('react');\n\nfunction Caret (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"fillRule\":\"evenodd\",\"d\":\"M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z\"}));\n}\n\nCaret.defaultProps = {\"viewBox\":\"0 0 16 16\"};\n\nmodule.exports = Caret;\n\nCaret.default = Caret;\n","var React = require('react');\n\nfunction Fb (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"m9.1875 8.50009v2.18751h-2.1875c-.21549 0-.42215.0856-.57453.238-.15237.1523-.23797.359-.23797.5745s.0856.4221.23797.5745c.15238.1524.35904.238.57453.238h2.1875v7.3411c-2.47177-.2081-4.7706-1.3566-6.42155-3.2102-1.66593-1.8704-2.542671-4.3133-2.446265-6.8162.096406-2.50289 1.158465-4.87116 2.963335-6.60787 1.80487-1.73672 4.21224-2.706884 6.71698-2.70693 2.5047.000055 4.9121.97023 6.717 2.70694 1.8048 1.73672 2.8669 4.10498 2.9633 6.60786.0964 2.5029-.7804 4.9458-2.4463 6.8162-1.6509 1.8536-3.9497 3.0021-6.4215 3.2102v-7.3411h2.1875c.2155 0 .4221-.0856.5745-.238s.238-.359.238-.5745-.0856-.4222-.238-.5745c-.1524-.1524-.359-.238-.5745-.238h-2.1875v-2.18744c.0004-.38113.152-.74653.4215-1.01604.2695-.2695.6349-.4211 1.0161-.42153h1.4999c.2155 0 .4221-.0856.5745-.23798.1524-.15237.238-.35903.238-.57452s-.0856-.42215-.238-.57453c-.1524-.15237-.359-.23797-.5745-.23797h-1.5-.0001c-.8119.00093-1.5903.32387-2.1644.89799-.57413.57411-.89707 1.35252-.898 2.16444z\",\"fill\":\"#0f2830\",\"stroke\":\"#0f2830\",\"strokeWidth\":\".125\"}));\n}\n\nFb.defaultProps = {\"fill\":\"none\",\"viewBox\":\"0 0 20 20\"};\n\nmodule.exports = Fb;\n\nFb.default = Fb;\n","var React = require('react');\n\nfunction Heart (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"M60.83,17.18c8-8.35,13.62-15.57,26-17C110-2.46,131.27,21.26,119.57,44.61c-3.33,6.65-10.11,14.56-17.61,22.32-8.23,8.52-17.34,16.87-23.72,23.2l-17.4,17.26L46.46,93.55C29.16,76.89,1,55.92,0,29.94-.63,11.74,13.73.08,30.25.29c14.76.2,21,7.54,30.58,16.89Z\"}));\n}\n\nHeart.defaultProps = {\"viewBox\":\"0 0 122.88 107.39\"};\n\nmodule.exports = Heart;\n\nHeart.default = Heart;\n","var React = require('react');\n\nfunction Horn (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"g\",{\"fill\":\"#8772c1\"},[React.createElement(\"path\",{\"d\":\"m64.7047 23.7328c2.1418.0517 3.945 1.3341 4.6189 3.3602.3336 1.0005.6205 2.0161.8641 3.04.2756 1.0868.1568 2.2361-.3352 3.2436-.492 1.0076-1.3254 1.8081-2.3521 2.2594-.5888.2668-.6856.5186-.5305 1.1189.357 1.3674.6322 2.7565.9141 4.1423.1668.8454-.2251 1.4858-.9775 1.6575-.7239.1668-1.3561-.2734-1.5563-1.1306-.3002-1.2957-.6022-2.5947-.849-3.9021-.1201-.642-.3703-.7054-.9475-.5003-2.1168.7538-4.2536 1.4525-6.3804 2.1779-.5822.1984-1.1477.2651-1.6398-.1968-.7423-.7004-.4203-1.8427.6573-2.2179 2.5405-.8838 5.091-1.7409 7.6381-2.6081.7357-.2484 1.478-.4752 2.2069-.7387 1.3712-.5003 1.925-1.5642 1.5513-2.9683-.1801-.667-.3736-1.334-.5655-2.0011-.5187-1.7959-1.5112-2.3746-3.3111-1.9427-3.2383.7782-6.4766 1.552-9.7149 2.3213-1.0309.2451-1.7182-.0817-1.92-.9022-.1852-.7587.3103-1.3907 1.2778-1.6225 3.3461-.8005 6.6929-1.5981 10.0402-2.393.4287-.095.874-.1301 1.3111-.1968z\",\"key\":0}),React.createElement(\"path\",{\"d\":\"m70.6814 45.3413h7.6732c.6255 0 1.1677.1267 1.4796.7203.5004.9422-.1802 1.9011-1.3945 1.9061-2.7507.0133-5.5047 0-8.2554 0-1.1193 0-1.1092 0-.9758 1.1523.3536 3.0683.6105 6.1383.2986 9.2283-.1518 1.5009-.3937 2.975-1.1427 4.314-.9908 1.7693-2.7373 2.3013-4.5488 1.3875-.5505-.2785-1.101-.5937-1.4879-1.0589-1.5797-1.8994-3.7899-2.7699-5.9618-3.6687-6.0751-2.5247-12.4356-3.4235-18.9845-3.2718-3.1382.087-6.2697.3398-9.3813.7571-.7206.0934-.8006.2885-.5004.9238 2.1585 4.4441 4.2853 8.9015 6.4188 13.3573 1.1376 2.3746 1.0009 4.6609-.6806 6.7137-2.799 3.4218-8.0502 2.7414-10.0318-1.3008-2.1085-4.314-4.1536-8.658-6.227-12.9887-.5872-1.2273-1.191-2.4463-1.7565-3.682-.1868-.4069-.4087-.5603-.8807-.5586-6.40214.0283-11.43976-3.7654-13.19125-9.9271-.393667-1.3857-.867403-2.7515-1.04422-4.1939-.773991-6.2968 2.72899-12.0049 8.70073-14.1527 5.20444-1.8711 10.37544-3.8171 15.29634-6.3335 5.9634-3.0466 11.4197-6.7653 15.8184-11.8915 1.47-1.7432 2.7907-3.6069 3.9484-5.57133.6155-1.02389.9308-2.11782 1.1326-3.27178.1416-.82317.4467-1.60964.8975-2.31292 1.0008-1.555849 2.5955-2.024437 4.2719-1.25235.9775.448577 1.7665 1.15063 2.4788 1.93772 2.0884 2.30959 3.5964 5.00272 4.9926 7.75086.0861.1522.1396.3207.1569.4948.0173.174-.0019.3498-.0564.516-.0544.1661-.143.3192-.26.4492s-.2598.2343-.4194.306c-.6672.3335-1.3544.115-1.7498-.6254-1.0192-1.91266-2.0501-3.8187-3.3361-5.57299-.7223-.98887-1.4796-1.95273-2.5022-2.65144-.834-.56864-1.1893-.46692-1.5897.46859-.5321 1.24568-.6672 2.57807-.7222 3.91046-.1552 3.45688.1668 6.88878.6972 10.29398 1.7849 11.3228 4.9359 22.2521 9.5999 32.7311 1.4011 3.15 2.9758 6.2117 5.0643 8.9765.6055.8005 1.261 1.5592 2.0901 2.1395.864.602 1.2494.5003 1.6497-.4635.5872-1.4091.6856-2.9133.7406-4.4108.1018-2.7014-.1668-5.3829-.4737-8.0627-.0534-.4753-.2486-.6003-.6906-.5903-1.0008.0233-2.0017.0217-3.0025 0-.8991-.0184-1.5013-.5887-1.473-1.3541.0267-.7371.6072-1.2623 1.4763-1.2657 2.6122-.01 5.2261-.0016 7.8383-.0016zm-26.2189-34.1586c-1.0587 1.4958-2.2033 2.929-3.4279 4.2923-4.7307 5.1511-10.4539 8.9215-16.6809 11.9949-4.7607 2.3512-9.7266 4.2006-14.71083 6.0032-4.38706 1.5909-7.17276 5.5214-7.00596 10.1872.10176 2.8833.85406 5.6948 2.44542 8.1195 2.42372 3.697 5.95337 5.3779 10.36047 4.7275 3.3178-.4902 6.5656-1.4007 9.8851-1.916l3.9783-.6203c-.3636-.2452-.5638-.3819-.7673-.517-2.9508-1.9544-5.0426-4.5975-6.1519-7.9527-.6889-2.0778-1.2861-4.1922-1.7932-6.3201-.6242-2.6385-.4976-5.3989.3654-7.9693.2468-.7604.854-1.1256 1.5179-.9739.734.1668 1.111.7671.9909 1.5826-.0238.136-.0567.2703-.0985.4019-.4754 1.7025-.6839 3.4235-.4337 5.1894.3337 2.3763 1.1343 4.6309 1.8349 6.9088 1.1427 3.7504 3.6048 6.3585 7.1478 8.0044 2.2419 1.0422 4.6222 1.0522 7.0143 1.0789 6.302.0667 12.4405 1.0189 18.3055 3.4302.1668.0683.3336.2351.4904.1134-7.2711-14.3829-11.6549-29.5828-13.2662-45.7649zm-12.4456 62.7008c.0333-.5003-.1418-1.0223-.382-1.5259-2.2853-4.7804-4.5683-9.5607-6.8492-14.3411-.2352-.5003-.5204-.6354-1.0342-.5253-1.8165.3885-3.6314.7821-5.4596 1.1173-.6322.1167-.6089.3335-.3703.8188 1.0359 2.1161 2.0384 4.2506 3.0576 6.3751 1.5463 3.2251 3.0759 6.4585 4.6506 9.6719.3254.6841.8758 1.2358 1.5593 1.563.6834.3272 1.4584.41 2.1955.2347.7617-.1737 1.4398-.6053 1.9195-1.2216.4798-.6164.7316-1.3796.7128-2.1603z\",\"key\":1}),React.createElement(\"path\",{\"d\":\"m79.996 3.66858c-.0434.66703-.5004 1.00055-1.0175 1.31405-5.428 3.24844-10.852 6.50297-16.2722 9.76367-.7339.4419-1.7815.7554-2.0884 1.4074-.3186.6804.5004 1.5525.7589 2.3646.2169.6854.5272 1.3341.7607 2.0228.2852.8338 0 1.5008-.7223 1.7843s-1.3845-.04-1.7164-.8621c-.4354-1.079-.8624-2.1679-1.2494-3.2601-.2019-.5687-.4004-.7555-.9742-.3519-.7473.5253-1.558.9605-2.3487 1.4241-.9174.5386-1.6681.4169-2.0884-.3185-.397-.7054-.1435-1.3841.744-1.916 7.3507-4.4102 14.703-8.81817 22.057-13.2239.7373-.44191 1.4579-.91717 2.2203-1.31405.2001-.11328.4268-.17135.6567-.16827.23.00307.455.06719.652.18578.1971.11859.359.2874.4694.48913.1103.20174.165.42917.1585.65899z\",\"key\":2}),React.createElement(\"path\",{\"d\":\"m6.85216 44.314c-.60217-.0483-1.06257-.3452-1.21603-1.0005-.16681-.7171.15513-1.3191.9041-1.5525 1.42621-.4469 2.86744-.8438 4.30537-1.2574.8507-.2451 1.6997-.5002 2.5588-.7104.7523-.1817 1.3678.1801 1.5697.8538.2018.6737-.0901 1.3858-.8074 1.6042-2.3353.7054-4.67896 1.3625-7.01929 2.0345-.09733.0185-.19617.028-.29525.0283z\",\"key\":3}),React.createElement(\"path\",{\"d\":\"m16.3469 45.6231c-.0267.6253-.3336 1.0505-.9341 1.2256-2.2569.6671-4.5039 1.3341-6.77745 1.9561-.81903.2251-1.46792-.1484-1.66809-.8338-.21852-.7504.12844-1.4074.96415-1.6592 2.22519-.667 4.45379-1.3341 6.69399-1.9444.9592-.2568 1.7365.3518 1.7215 1.2557z\",\"key\":4})]));\n}\n\nHorn.defaultProps = {\"fill\":\"none\",\"height\":\"80\",\"viewBox\":\"0 0 80 80\",\"width\":\"80\"};\n\nmodule.exports = Horn;\n\nHorn.default = Horn;\n","var React = require('react');\n\nfunction Ln (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"M19.5 3h-15A1.502 1.502 0 0 0 3 4.5v15A1.502 1.502 0 0 0 4.5 21h15a1.502 1.502 0 0 0 1.5-1.5v-15A1.502 1.502 0 0 0 19.5 3zM9 16.5a.75.75 0 1 1-1.5 0v-6a.75.75 0 0 1 1.5 0zm-.75-7.875a1.125 1.125 0 1 1 0-2.25 1.125 1.125 0 0 1 0 2.25zm9 7.875a.75.75 0 1 1-1.5 0v-3.375a1.875 1.875 0 1 0-3.75 0V16.5a.75.75 0 1 1-1.5 0v-6a.75.75 0 0 1 1.48-.167 3.374 3.374 0 0 1 5.27 2.792z\",\"fill\":\"#0f2830\"}));\n}\n\nLn.defaultProps = {\"fill\":\"none\",\"height\":\"24\",\"width\":\"24\"};\n\nmodule.exports = Ln;\n\nLn.default = Ln;\n","var React = require('react');\n\nfunction Logo (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"clipRule\":\"evenodd\",\"d\":\"m47.5843.606949c-.9065.960901-1.0735 1.687941-1.4302 6.222771-.5333 6.78188-1.4608 9.02648-3.7298 9.02648-1.5184 0-2.891-1.1456-4.8741-4.0674-2.6282-3.87235-3.9441-4.68281-5.1438-3.16829-.8633 1.08974-.922 1.97899-.322 4.87509.9269 4.4725.6132 6.7805-.9749 7.1763-.8961.2232-2.4153-.5523-8.759-4.4714-5.4416-3.3616-7.1145-4.014-8.3064-3.2385-1.5536 1.0109-.5231 2.8293 4.4441 7.8423 4.1502 4.1883 5.257 5.819 4.9022 7.2225-.3945 1.5608-2.4338 1.8231-8.3196 1.0692-3.815-.4885-5.1317-.3714-5.59999.4973-.25178.4672-.21569.767.1796 1.4957.52009.9592 1.88499 1.9434 5.46109 3.9377 4.959 2.7659 4.9975 4.7197.1204 6.0789-1.5294.4261-4.0028.8361-6.14151 1.018-4.10913.3493-6.60265.8502-8.06676 1.6202l-1.02363.5385 11.8065-.058 11.8065-.0579 1.0244-2.8721c2.7966-7.8396 6.8848-12.649 13.3624-15.7191 4.5507-2.1571 10.2638-3.2044 14.3683-2.6344 9.9988 1.389 17.2654 7.7983 21.0539 18.5712l.8853 2.5176 1.687.0153c.928.0085 5.7159.1163 10.6398.2399 4.924.1236 9.0026.18 9.0634.1255.2312-.207-2.9422-1.4694-4.7234-1.8791-1.022-.2352-3.4392-.5331-5.3716-.6622-3.8411-.2563-5.5178-.7467-6.4112-1.8742-1.3892-1.7539-.1754-3.493 3.8833-5.563 2.7486-1.4019 4.3859-2.822 4.3859-3.804 0-1.2476-2.3714-2.2093-4.4914-1.8214-.484.0886-1.9153.3493-3.1808.579-2.5801.4691-4.2736.3206-5.0411-.4414-1.2641-1.2553-.1358-3.4725 4.3089-8.4688 4.511-5.0706 5.4457-7.0515 3.5505-7.5239-1.6749-.4174-2.4404-.0276-12.8304 6.5286-.7231.4565-1.8305.8766-2.5104.9529-2.1874.2448-2.4709-.8465-1.6825-6.4782.4774-3.4104.3699-4.68391-.465-5.51297-1.0762-1.06868-2.3627-.11461-5.1204 3.79797-1.8139 2.5736-3.3017 3.8901-4.3964 3.8901-.9699 0-2.2222-1.2695-2.8216-2.8606-.3289-.8725-.7292-3.1198-.9848-5.52771-.6099-5.7471-.6694-6.03513-1.4352-6.938868-.8418-.993455-1.9492-1.071411-2.7756-.195573zm-28.8768 48.355151c-.549.5449-.611.5471-3.1337.1149-3.6739-.6297-6.16608-.1638-8.08773 1.5118-2.55164 2.2246-2.34449 6.8084.40687 8.9974.44901.3573 2.57536 1.4117 4.72566 2.3431 4.9666 2.1518 6.5263 3.1229 7.7034 4.7958 1.1291 1.605-.1091 3.7221-2.571 4.3958-2.5535.6989-7.0629-.6778-11.31115-3.453-3.78325-2.4716-4.10307-1.7601-1.41479 3.1464 2.17976 3.9788 2.56266 4.3256 3.54194 3.2074l.68261-.7798 3.21219.6031c4.4766.8403 8.3951.7049 10.4732-.3627 1.5812-.8118 2.9134-2.3827 3.3789-3.9839 1.4509-4.99-.5443-8.5333-6.2677-11.1313-4.4014-1.9981-5.6071-2.6609-6.7255-3.6959-1.9541-1.8088-1.1677-2.8756 1.9437-2.6373 2.2015.1685 3.7444.8132 6.0121 2.5118 3.1127 2.3315 3.6295 1.2188 1.1892-2.5605-2.4883-3.853-2.7283-4.0461-3.7582-3.0231zm35.2839 8.7871c-.303.165-1.1396.8644-1.8594 1.5542l-1.3085 1.2541v-.9931c0-1.3417-.2355-1.8584-.8468-1.8584-.7487 0-4.8553 2.6658-5.0099 3.252-.1892.7183.2284 1.3091 1.0746 1.52l.7344.183-.1653 4.1967c-.1583 4.0318-.1928 4.2247-.8682 4.8956-1.5658 1.5545-.5375 2.1453 3.5361 2.0315 2.2319-.0621 2.7941-.1597 2.8588-.4956.0838-.4349-.7024-1.4196-1.4776-1.8501-.3955-.22-.4242-.6896-.2438-4.0302.186-3.4492.2601-3.8371.8443-4.4169.873-.8671 1.8371-.7985 2.9979.2136.5361.4672 1.1421.7855 1.3474.7076.3129-.1195 1.5539-4.4175 1.5539-5.3825 0-.3157-1.6388-1.1045-2.2638-1.09-.1942.0046-.6011.1433-.9041.3085zm26.9778.1852c-1.793.8329-3.15 2.1609-3.15 3.0824 0 1.0178.787 1.0517 2.3415.1012 1.2991-.7946 2.6296-.8715 3.2524-.1879.6041.6628 1.3484 2.4828 1.1476 2.8056-.0895.1439-.6908.2615-1.3363.2615-2.6023 0-5.1972 1.2872-6.1038 3.0277-.5374 1.032-.528 4.1453.0157 5.1891 1.0727 2.0599 5.1452 2.7098 8.1781 1.305l1.5726-.7284 1.5495.8331c1.265.6806 1.76.8053 2.6971.6806 1.7531-.2333 3.6662-2.6483 2.098-2.6483-.9366 0-2.0939-.7479-2.4137-1.56-.1658-.4207-.4366-1.3189-.6016-1.9959s-.8655-2.9916-1.5566-5.1437c-1.2008-3.7389-1.3052-3.9446-2.3545-4.6341-1.4591-.959-3.7488-1.1253-5.336-.3879zm-51.0795 1.2276c-1.1354.6406-2.1029 1.3635-2.15 1.6067-.0487.2511.3378.7632.8936 1.1841l.9793.7416.0066 4.0022c.0036 2.2011.119 4.4829.2562 5.0707.6719 2.8761 4.1554 3.4919 6.7853 1.1991.6686-.5829.9405-.6988.9405-.4012 0 .2303.3324.6783.739.9959.6372.4975 1.0449.5662 2.9613.4984 2.101-.0742 2.2271-.1138 2.3145-.7263.0674-.4729-.1741-.8654-.8953-1.4559l-.9876-.8083v-6.2376c0-5.1718-.0697-6.2952-.4074-6.5737-.5264-.4338-1.5181-.0995-3.5667 1.2016-1.8332 1.1644-2.0153 1.9369-.698 2.9604l.8371.6508-.1903 3.346c-.1857 3.263-.2105 3.3631-.9961 4.0193-.9677.8088-1.8525.8566-2.7299.1479-.6482-.5232-.6501-.5426-.5743-5.8439.079-5.5146-.1-6.7671-.9645-6.7512-.2688.0049-1.4178.5331-2.5533 1.1734zm29.129-.4434c-.7011.7777-.6074 1.1234.6046 2.2326.9622.881 1.3594 1.704 3.4761 7.2058 1.6412 4.2668 2.3379 6.4151 2.2249 6.862-.2479.9812-1.2478 2.1075-1.8706 2.1075-.5628 0-1.7019-.9975-2.4407-2.1376-.5683-.8766-1.3745-.5465-1.3745.5627 0 1.5719.6382 4.4481 1.0633 4.7914.7641.6173 2.1794.8597 3.2719.5601 1.9867-.5448 2.5261-1.4767 6.181-10.6777 2.9978-7.5469 3.5218-8.6686 4.4823-9.5959 1.5696-1.5151 1.2223-1.8975-2.0062-2.2085-1.9139-.1841-2.6158-.1597-2.9334.102-.5912.4872-.5217.9328.2964 1.8983l.7137.8425-1.1269 3.1065c-.6201 1.7084-1.1272 3.2465-1.1272 3.418s-.1047.3118-.2325.3118c-.387 0-3.0425-6.4845-2.891-7.06.0771-.2927.4393-.6675.8054-.8332.7405-.3348.8936-1.2613.2493-1.5066-.2286-.0873-1.8712-.2391-3.6499-.3375-2.9885-.1653-3.2706-.1382-3.716.3558zm26.6056 9.4876.5636 1.8841-.7564.6461c-.47.4015-1.1063.646-1.6807.646-1.6676 0-2.8623-2.1865-2.1715-3.9741.2358-.6105 1.6837-1.2311 2.6839-1.1504.7333.0591.8424.2153 1.3611 1.9483zm-84.660168 11.1086v1.3676h27.546668 27.5466v-1.3676-1.3677h-27.5466-27.546668zm68.040168 0v1.3676h12.8092 12.8092v-1.3676-1.3677h-12.8092-12.8092zm-65.83644 11.8984v4.7868h.81373c.81318 0 .814-.0019.89526-1.8463l.08154-1.8463 3.01388-.0783c1.6966-.044 3.17583-.2117 3.38493-.384.2683-.221.349-.9171.2917-2.5132-.1022-2.8403-.1972-2.8958-4.96884-2.9013l-3.5122-.0041zm13.91104-4.5774c-.319.2327-4.5452 8.6872-4.5452 9.0929 0 .1493.3818.2713.8485.2713.7343 0 .9071-.1474 1.2814-1.0941l.4328-1.0941h2.5695 2.5696l.5622 1.0941c.4931.9598.6796 1.0941 1.5206 1.0941.5272 0 .9586-.0629.9586-.1398 0-.0768-1.0545-2.2309-2.3431-4.7867-1.9922-3.9511-2.4354-4.6464-2.9613-4.6429-.3399.0025-.7421.0947-.8936.2052zm9.4435.1042c-.9646.352-1.1181 1.1595-.9974 5.2484.0625 2.1196.2115 3.2824.4506 3.5201.2433.2415 1.446.3835 3.7657.445 3.151.0834 3.4516.0473 3.9813-.4787.3906-.3878.573-.9196.573-1.6699 0-.93-.1097-1.1422-.7066-1.3676-.3887-.1466-.7531-.2667-.8099-.2667-.0567 0-.1416.4617-.1887 1.0257l-.0854 1.0258h-2.4792-2.4792l-.0779-3.0876-.078-3.0876 2.5572.0788 2.5571.0787.0879.9109c.0658.6819.1928.8712.5046.7522.2292-.0873.5926-.1587.8074-.1587.524 0 .5237-1.9029-.0002-2.6146-.343-.4658-.7733-.5369-3.5122-.5791-1.7167-.0265-3.4582.0747-3.8701.2249zm11.8823-.2003c-.0631.0624-.0782 2.2164-.0333 4.7868l.0812 4.6735h.8024.8022l.0804-2.0963.0805-2.0963 2.42 2.0963c2.3185 2.0088 2.4769 2.0963 3.7876 2.0963.7523 0 1.3677-.0517 1.3677-.1149s-1.3112-1.186-2.9142-2.4948c-1.6026-1.3091-2.8114-2.4744-2.6857-2.5898.1256-.1154 1.22-1.0378 2.432-2.0496 1.2121-1.0117 2.2437-1.9447 2.2927-2.0733.0488-.1286-.4647-.1958-1.1409-.1496-1.0708.0733-1.4845.311-3.1996 1.8378-1.0831.9642-2.0883 1.7944-2.2335 1.8444-.152.0525-.2639-.7303-.2639-1.8463v-1.9374h-.7803c-.4295 0-.8322.0509-.8953.1132zm13.9075 1.8537c-.5488 1.0819-1.5958 3.2359-2.3269 4.7868l-1.3297 2.8198h.9044c.7886 0 .968-.14 1.4013-1.0941l.4969-1.0941h2.5971 2.5974l.4327 1.0941c.4008 1.0131.5116 1.0941 1.4961 1.0941h1.063l-1.0991-2.171c-.6046-1.1942-1.6109-3.2558-2.2357-4.5816-1.2096-2.5654-1.4167-2.8102-2.3836-2.8168-.49-.0033-.8209.3988-1.6139 1.9628zm10.6225-1.75c-.9338.2765-1.0925.9475-1.0925 4.6221 0 4.9446-.1479 4.8051 4.9658 4.6864 2.6668-.0619 3.9312-.1962 4.1805-.4442.2179-.2167.3953-1.2575.4545-2.6669l.097-2.3114h-2.5073-2.5076v.8206c0 .8135.0135.8206 1.5316.8206h1.5319l-.0857 1.0257-.0854 1.0258-2.8235.0779-2.8236.078v-3.1552-3.1551h2.8924c2.7456 0 2.8924.029 2.8924.5686 0 .4987.1108.5455.8953.3786.4925-.1048.9272-.218.9661-.2516.2358-.2038-.3477-1.7903-.7215-1.9626-.4834-.2229-7.0869-.3567-7.7604-.1573zm12.5891-.0345c-.1011.1002-.1838 2.2542-.1838 4.7868v4.6043h4.132 4.132v-.8116-.8115l-3.099-.0774-3.099-.0774-.084-1.1497-.084-1.1496 1.8745-.0813c1.7942-.0776 1.8746-.1105 1.8746-.765 0-.654-.0815-.6874-1.8594-.7648l-1.8594-.0807v-1.0818-1.0815h3.1679 3.1678v-.8206-.8206h-3.9482c-2.1718 0-4.0312.0821-4.132.1824zm13.1276.008c-.33.0637-.7465.2913-.9256.5057-.4118.4927-.3798 3.8975.0413 4.4014.2301.2754 1.1372.3731 3.4618.3731h3.15l-.0849 1.1625-.0845 1.1625-2.709.0785c-2.5279.0733-2.7185.0413-2.8557-.4787-.1529-.581-.7777-.7178-1.4231-.3121-.5732.3608.0835 2.1114.8705 2.3209.3344.0889 2.0026.1636 3.7069.1655 3.8962.0049 4.2009-.2011 4.2009-2.8379 0-2.6822-.2653-2.8794-3.9943-2.9675l-3.0301-.0717v-.9573-.9574l2.6858-.0782c2.5712-.0749 2.6858-.0539 2.6858.497 0 .4694.1141.5413.6198.3895.9779-.2935 1.1156-.5624.714-1.3947-.2429-.5036-.6647-.8384-1.1988-.9519-.9192-.1953-4.9011-.2289-5.8308-.0492zm-78.6503 2.741c.1014 1.3873-.18761 1.5162-3.12023 1.3906l-1.92248-.0823-.08815-.915c-.15811-1.6389-.03773-1.7133 2.63181-1.6258l2.41474.079zm8.5805.6929c.3366.7896.6762 1.59.7548 1.7779.1052.2516-.3009.3419-1.5393.3419-.9253 0-1.6823-.1204-1.6823-.2675 0-.4067 1.4666-3.2884 1.6734-3.2884.0998 0 .4568.6464.7934 1.4361zm36.3874.2735.8165 1.7095-.822.0854c-.4523.0468-1.2363.0468-1.7423 0l-.9203-.0854.7773-1.7095c.4275-.9401.8441-1.7096.9259-1.7096.0815 0 .5159.7695.9649 1.7096z\",\"fill\":\"#0f2830\",\"fillRule\":\"evenodd\"}));\n}\n\nLogo.defaultProps = {\"fill\":\"none\",\"viewBox\":\"0 0 96 96\"};\n\nmodule.exports = Logo;\n\nLogo.default = Logo;\n","var React = require('react');\n\nfunction Rocket (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"g\",{\"fill\":\"#279fe3\"},[React.createElement(\"path\",{\"d\":\"m34.4023 76.3851c1.9734-.6739 3.8292-1.6528 5.4999-2.9011 3.7918-2.8046 6.6933-6.2816 8.0137-10.9035.6558-2.2347.6475-4.612-.0237-6.8422-.193-.6503-.386-.7604-1.0157-.4081-4.5651 2.5785-9.3586 4.7295-14.3194 6.4255-.8955.3015-1.5337.144-2.2006-.525-3.872-3.91-7.7604-7.8024-11.6651-11.6774-.6517-.6453-.7651-1.2872-.4858-2.134 1.6369-4.9724 3.8477-9.6857 6.348-14.2703.4689-.8587.479-.8655-.4808-1.1381-3.7021-1.0501-7.1537-.288-10.4107 1.5547-4.557 2.5794-7.75808 6.3781-9.80129 11.1778-.08295.1914-.24545.3879-.11511.7317.34872-.2524.67712-.4912 1.00552-.7215 2.96748-2.0713 6.15498-3.5312 9.85378-3.6057.6771-.0136 1.2374.1778 1.5134.8383.0842.1901.1201.3981.1047.6055-.0154.2073-.0817.4077-.193.5832-.1114.1756-.2643.321-.4453.4232-.181.1023-.3844.1583-.5921.163-5.17155.1575-8.97188 2.9859-12.48613 6.3731-.52477.5081-1.0817.8553-1.806213.4556-.7245181-.3997-.7651452-1.0162-.6534205-1.7546 1.3542435-8.9253 8.5215435-17.2393 16.7993635-19.4189 2.9674-.7825 5.9248-.7164 8.811.3641.5738.2151.8108.0897 1.1172-.4133 4.337-7.0894 9.5914-13.3795 16.1967-18.4823 6.8812-5.31797 14.5344-8.9135 23.1507-10.315814 3.8935-.6317162 7.7971-.785835 11.7125-.215088 1.1748.169361 1.5015.4505 1.7013 1.624172.8904 5.23326.435 10.40553-.8109 15.52193-2.0313 8.3732-6.2159 15.6083-11.8174 22.0813-4.6789 5.4077-10.1924 9.8077-16.2593 13.5387-.5621.3387-.6924.608-.4588 1.2516 1.4355 3.9512 1.1274 7.877-.6856 11.5877-3.675 7.5145-9.6489 12.1838-17.8793 13.8876-.8075.1693-1.7487.4047-2.2599-.5792-.5112-.984.2235-1.5582.8126-2.1729 2.4054-2.5083 4.4503-5.2502 5.4778-8.6374.3028-1.0294.4735-2.093.5079-3.1654.0423-1.0026.5823-1.6022 1.3881-1.5564.8058.0457 1.2984.6893 1.2611 1.6936-.1168 3.0959-1.1426 5.9005-2.7762 8.5002-.4841.7757-1.014 1.5276-1.6335 2.4557zm40.5205-56.3057.3148-.2219c.7766-2.3547 1.3342-4.7761 1.6658-7.2334.4328-2.9633.5067-5.96802.22-8.94903-.0525-.50809-.1947-.78076-.799-.84681-3.3748-.31552-6.7768-.17596-10.1145.41494-8.5063 1.4565-15.9715 5.16381-22.653 10.563-6.4326 5.1994-11.4162 11.5945-15.5534 18.6958-2.7454 4.6661-5.0584 9.5738-6.91 14.6616-.1439.3963-.2962.7384.11 1.1415 3.5075 3.4753 7.0003 6.9658 10.4784 10.4716.215.2151.3979.3268.733.2066 1.2679-.4556 2.5392-.9061 3.7631-1.4667-.0728-.3709-.3589-.5368-.5688-.7519-3.3494-3.4324-6.7034-6.862-10.062-10.2887-.1886-.1702-.3588-.3598-.5078-.5657-.3707-.5927-.3623-1.1855.1507-1.6936.5129-.5081 1.1104-.5081 1.6928-.1169.2238.1725.4302.3665.6161.5793 3.6305 3.709 7.2576 7.4231 10.8814 11.1422.4062.4183.716.4742 1.234.2304 6.0653-2.8589 11.8344-6.2088 17.0871-10.392 7.4483-5.9277 13.3206-13.1086 17.121-21.9086.3064-.7096.237-1.1228-.3166-1.6699-4.3522-4.295-8.6688-8.6442-12.9973-12.97472-.1646-.1545-.32-.31849-.4655-.49115-.4638-.59615-.4571-1.20077.0457-1.76305.474-.53179 1.2239-.55381 1.8265-.07282.1934.16538.3776.34121.5519.52671 3.9916 3.99013 7.9798 7.98313 11.9647 11.97893.2099.2151.3284.5335.4909.7943z\",\"key\":0}),React.createElement(\"path\",{\"d\":\"m5.64671 74.3528c2.14816-.8468 4.06272-1.575 5.95529-2.3372 2.2819-.8939 4.5085-1.9232 6.6679-3.0823 2.1719-1.1856 3.2163-2.9757 3.047-5.4755-.0711-.9874.4571-1.6174 1.2866-1.636.7905-.0169 1.3153.5436 1.3694 1.5005.1863 3.3364-1.0715 5.9277-3.9831 7.6484-3.5549 2.095-7.4145 3.5362-11.24696 5.0232-1.49474.5809-3.01657 1.0924-4.51977 1.6479-.62803.232-1.21712.2693-1.7165-.254-.47398-.4996-.39611-1.0619-.18282-1.6564 1.77067-4.9572 3.60397-9.8924 5.97388-14.604 1.25775-2.4828 2.99797-4.356 5.81987-4.9775.9683-.2134 1.945-.315 2.9336-.1118.8193.1694 1.2544.7164 1.1613 1.4853-.0847.6995-.6382 1.1415-1.4457 1.1127-.5349-.0186-1.0665-.0796-1.6014.0085-1.7486.2879-3.0792 1.177-3.9577 2.7301-1.89429 3.3703-3.27053 6.9793-4.67555 10.5732-.26577.7113-.52477 1.4192-.88534 2.4049z\",\"key\":1}),React.createElement(\"path\",{\"d\":\"m65.0064 25.7462c-.0102 2.1353-.6534 4.2195-1.8483 5.9888-1.1949 1.7692-2.8877 3.144-4.864 3.9501-1.9764.806-4.1473 1.0072-6.2381.5781-2.0907-.4292-4.0071-1.4695-5.5065-2.989-1.4993-1.5196-2.5143-3.4502-2.9163-5.5473-.4019-2.097-.1729-4.2663.6582-6.233.8312-1.9668 2.2269-3.6425 4.0106-4.8151 1.7837-1.1725 3.8751-1.7891 6.0093-1.7717 2.8523.0268 5.578 1.1818 7.5819 3.2127s3.1231 4.7726 3.1132 7.6264zm-18.9154.0085c.0061 1.6105.489 3.1832 1.3879 4.5193.899 1.3361 2.1735 2.3757 3.6626 2.9874 1.4892.6118 3.1261.7683 4.7041.4498s3.0263-1.0978 4.1619-2.2393c1.1356-1.1416 1.9075-2.5942 2.2183-4.1745.3109-1.5803.1466-3.2173-.472-4.7042s-1.6637-2.7571-3.0035-3.65c-1.3397-.893-2.9139-1.3686-4.5237-1.367-1.0726-.0016-2.1349.2093-3.1256.6206-.9908.4112-1.8903 1.0146-2.6468 1.7754-.7565.7607-1.355 1.6639-1.7608 2.6572-.4059.9933-.6112 2.0572-.604 3.1303z\",\"key\":2})]));\n}\n\nRocket.defaultProps = {\"fill\":\"none\",\"height\":\"80\",\"viewBox\":\"0 0 80 80\",\"width\":\"80\"};\n\nmodule.exports = Rocket;\n\nRocket.default = Rocket;\n","var React = require('react');\n\nfunction Tw (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"m.823578 2.12702c.023603-.1298.084052-.25007.174135-.34645.090087-.09639.205997-.16482.333907-.19713s.26241-.02714.38746.0149.23536.11917.31778.22219l.0001.00013c.0272.03381 2.50287 3.06771 6.19683 4.0598l.07871.02114v-.0815-.56962c.00786-1.18428.48564-2.31698 1.32833-3.14912.84267-.83213 1.98127-1.295602 3.16557-1.288536.7692.010694 1.5225.220696 2.1863.609486.6638.38884 1.2155.94321 1.6011 1.60897l.018.03118h.0361l2.8521.00005c.136 0 .2689.04032.382.11586.113.07554.2011.18291.2532.30853.052.12562.0656.26385.0391.39722-.0265.13336-.092.25586-.1881.35201l-2.7847 2.78462-.0176.01761-.0007.02489c-.0744 2.73793-1.1196 5.40765-2.8921 7.36675-2.0754 2.2938-4.94103 3.5075-8.2911 3.5075-3.25049 0-4.92267-1.6379-4.98617-1.7014-.087933-.0879-.150366-.1981-.180646-.3187-.030281-.1206-.027274-.2472.008699-.3662.035974-.1191.103566-.2262.195577-.3098.09201-.0837.205-.1408.32692-.1654h.00008c.40452-.0819 1.10593-.2817 1.81304-.6043.70581-.3219 1.42538-.7697 1.85754-1.3514l.04186-.0564-.06081-.0351c-.90001-.5189-1.6992-1.1957-2.35931-1.998h-.00001c-2.334917-2.83533-2.288037-6.40207-1.833192-8.90378zm0 0-.061447-.01118z\",\"fill\":\"#0f2830\",\"stroke\":\"#0f2830\",\"strokeWidth\":\".125\"}));\n}\n\nTw.defaultProps = {\"fill\":\"none\",\"viewBox\":\"0 0 21 18\"};\n\nmodule.exports = Tw;\n\nTw.default = Tw;\n"],"names":["camelCase","input","options","Array","isArray","TypeError","Object","assign","pascalCase","x","map","trim","filter","length","join","toUpperCase","toLowerCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","_","p1","m","charAt","module","exports","height","prototype","node","images","_node$images","fallback","_node$images$fallback","src","Boolean","gatsbyImageData","gatsbyImage","childImageSharp","_node$childImageSharp","format","isLoading","isLoaded","loading","style","shouldLoad","opacity","placeholder","layout","width","backgroundColor","objectFit","objectPosition","wrapperStyle","position","top","left","bottom","right","transition","sources","fallbackImage","paddingTop","maxWidth","display","React","alt","role","children","props","Fragment","Sizer","q","P","H","srcSet","decoding","undefined","t","sizes","Image","media","type","key","propTypes","PropTypes","Picture","displayName","isRequired","e","Placeholder","_Picture$propTypes","propName","componentName","MainImage","rest","image","altValidator","Set","onError","as","className","preactClass","class","onStartLoad","onLoad","overflow","getWrapperProps","wStyle","wClass","wrapperProps","useRef","useMemo","JSON","stringify","sizer","getSizer","useEffect","renderImageToStringPromise","import","then","renderImageToString","swapPlaceholderImage","renderImage","root","current","querySelector","ssrImage","hasNativeLazyLoadSupport","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","onLoadListener","imageCache","add","cacheKey","has","innerHTML","animationFrame","requestAnimationFrame","cleanupCallback","cancelAnimationFrame","useLayoutEffect","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ae","memo","warn","GatsbyImageHydrator","GatsbyImage","se","checkDimensionProps","validLayouts","Error","GatsbyImageBrowser","__error","imageData","__imageData","console","StaticImage","HomeBanner","data","title","intro","to","cta","url","S","HomeBrands","imageSharps","items","item","index","img","base","getImage","G","name","HomeCtaProducts","HomeMottoVisionMission","icons","horn","bulb","rocket","boxes","box","icon","content","HomeCtaQuality","IndexPage","image_sharps","allFile","nodes","HomePage","Head","Header","fb","tw","ln","site_social_menu","href","target","rel","site_secondary_menu","activeClassName","site_primary_menu","Footer","site_get_started","subtitle","site_footer_menu","submenu","subItem","subIndex","Layout","siteData","Bulb","createElement","defaultProps","default","Caret","Fb","Heart","Horn","Ln","Logo","Rocket","Tw"],"sourceRoot":""}